{"message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"A temporary value is being dropped while a borrow is still in active use.\n\nErroneous code example:\n\n```compile_fail,E0716\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet p = bar(&foo());\n         // ------ creates a temporary\nlet q = *p;\n```\n\nHere, the expression `&foo()` is borrowing the expression `foo()`. As `foo()` is\na call to a function, and not the name of a variable, this creates a\n**temporary** -- that temporary stores the return value from `foo()` so that it\ncan be borrowed. You could imagine that `let p = bar(&foo());` is equivalent to\nthe following, which uses an explicit temporary variable.\n\nErroneous code example:\n\n```compile_fail,E0597\n# fn foo() -> i32 { 22 }\n# fn bar(x: &i32) -> &i32 { x }\nlet p = {\n  let tmp = foo(); // the temporary\n  bar(&tmp) // error: `tmp` does not live long enough\n}; // <-- tmp is freed as we exit this block\nlet q = p;\n```\n\nWhenever a temporary is created, it is automatically dropped (freed) according\nto fixed rules. Ordinarily, the temporary is dropped at the end of the enclosing\nstatement -- in this case, after the `let`. This is illustrated in the example\nabove by showing that `tmp` would be freed as we exit the block.\n\nTo fix this problem, you need to create a local variable to store the value in\nrather than relying on a temporary. For example, you might change the original\nprogram to the following:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = foo(); // dropped at the end of the enclosing block\nlet p = bar(&value);\nlet q = *p;\n```\n\nBy introducing the explicit `let value`, we allocate storage that will last\nuntil the end of the enclosing block (when `value` goes out of scope). When we\nborrow `&value`, we are borrowing a local variable that already exists, and\nhence no temporary is created.\n\nTemporaries are not always dropped at the end of the enclosing statement. In\nsimple cases where the `&` expression is immediately stored into a variable, the\ncompiler will automatically extend the lifetime of the temporary until the end\nof the enclosing block. Therefore, an alternative way to fix the original\nprogram is to write `let tmp = &foo()` and not `let tmp = foo()`:\n\n```\nfn foo() -> i32 { 22 }\nfn bar(x: &i32) -> &i32 { x }\nlet value = &foo();\nlet p = bar(value);\nlet q = *p;\n```\n\nHere, we are still borrowing `foo()`, but as the borrow is assigned directly\ninto a variable, the temporary will not be dropped until the end of the\nenclosing block. Similar rules apply when temporaries are stored into aggregate\nstructures like a tuple or struct:\n\n```\n// Here, two temporaries are created, but\n// as they are stored directly into `value`,\n// they are not dropped until the end of the\n// enclosing block.\nfn foo() -> i32 { 22 }\nlet value = (&foo(), &foo());\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Kevin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\macros.rs","byte_start":4187,"byte_end":4287,"line_start":119,"line_end":122,"column_start":23,"column_end":6,"is_primary":true,"text":[{"text":"    ($($arg:tt)*) => {{","highlight_start":23,"highlight_end":24},{"text":"        let res = $crate::fmt::format($crate::__export::format_args!($($arg)*));","highlight_start":1,"highlight_end":81},{"text":"        res","highlight_start":1,"highlight_end":12},{"text":"    }}","highlight_start":1,"highlight_end":6}],"label":"creates a temporary value which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\asm_binary_parser.rs","byte_start":340,"byte_end":365,"line_start":12,"line_end":12,"column_start":39,"column_end":64,"is_primary":false,"text":[{"text":"            predefined_table.insert( &format!(\"{}{}\", \"R\", num),x);","highlight_start":39,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"format!","def_site_span":{"file_name":"C:\\Users\\Kevin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\macros.rs","byte_start":4143,"byte_end":4162,"line_start":118,"line_end":118,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! format {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\asm_binary_parser.rs","byte_start":368,"byte_end":369,"line_start":12,"line_end":12,"column_start":67,"column_end":68,"is_primary":false,"text":[{"text":"            predefined_table.insert( &format!(\"{}{}\", \"R\", num),x);","highlight_start":67,"highlight_end":68}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":314,"byte_end":368,"line_start":12,"line_end":12,"column_start":13,"column_end":67,"is_primary":false,"text":[{"text":"            predefined_table.insert( &format!(\"{}{}\", \"R\", num),x);","highlight_start":13,"highlight_end":67}],"label":"argument requires that borrow lasts for `'static`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0716]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: temporary value dropped while borrowed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:12:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            predefined_table.insert( &format!(\"{}{}\", \"R\", num),x);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtemporary value is freed at the end of this statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcreates a temporary value which is freed while still in use\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14margument requires that borrow lasts for `'static`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"borrowed data escapes outside of method","code":{"code":"E0521","explanation":"Borrowed data escapes outside of closure.\n\nErroneous code example:\n\n```compile_fail,E0521\nlet mut list: Vec<&str> = Vec::new();\n\nlet _add = |el: &str| {\n    list.push(el); // error: `el` escapes the closure body here\n};\n```\n\nA type annotation of a closure parameter implies a new lifetime declaration.\nConsider to drop it, the compiler is reliably able to infer them.\n\n```\nlet mut list: Vec<&str> = Vec::new();\n\nlet _add = |el| {\n    list.push(el);\n};\n```\n\nSee the [Closure type inference and annotation][closure-infere-annotation] and\n[Lifetime elision][lifetime-elision] sections of the Book for more details.\n\n[closure-infere-annotation]: https://doc.rust-lang.org/book/ch13-01-closures.html#closure-type-inference-and-annotation\n[lifetime-elision]: https://doc.rust-lang.org/reference/lifetime-elision.html\n"},"level":"error","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":1507,"byte_end":1514,"line_start":47,"line_end":47,"column_start":42,"column_end":49,"is_primary":false,"text":[{"text":"    fn get_all_c_instructions(&mut self, content: &String){","highlight_start":42,"highlight_end":49}],"label":"`content` is a reference that is only valid in the method body","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":1634,"byte_end":1688,"line_start":50,"line_end":50,"column_start":17,"column_end":71,"is_primary":true,"text":[{"text":"                self.symbol_table.insert(c, u16::try_from(i).unwrap());","highlight_start":17,"highlight_end":71}],"label":"`content` escapes the method body here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":1516,"byte_end":1517,"line_start":47,"line_end":47,"column_start":51,"column_end":52,"is_primary":false,"text":[{"text":"    fn get_all_c_instructions(&mut self, content: &String){","highlight_start":51,"highlight_end":52}],"label":"let's call the lifetime of this reference `'1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":1634,"byte_end":1688,"line_start":50,"line_end":50,"column_start":17,"column_end":71,"is_primary":true,"text":[{"text":"                self.symbol_table.insert(c, u16::try_from(i).unwrap());","highlight_start":17,"highlight_end":71}],"label":"argument requires that `'1` must outlive `'static`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0521]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrowed data escapes outside of method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:50:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_all_c_instructions(&mut self, content: &String){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mlet's call the lifetime of this reference `'1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`content` is a reference that is only valid in the method body\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.symbol_table.insert(c, u16::try_from(i).unwrap());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`content` escapes the method body here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9margument requires that `'1` must outlive `'static`\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4947,"byte_end":4951,"line_start":113,"line_end":113,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5053,"byte_end":5055,"line_start":114,"line_end":114,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5153,"byte_end":5157,"line_start":115,"line_end":115,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        \"-D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:115:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"-D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5259,"byte_end":5261,"line_start":116,"line_end":116,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:116:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5359,"byte_end":5364,"line_start":117,"line_end":117,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        \"D+1\"           => {c1 = \"0\"; c2 = \"1\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:117:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"D+1\"           => {c1 = \"0\"; c2 = \"1\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5465,"byte_end":5468,"line_start":118,"line_end":118,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5565,"byte_end":5570,"line_start":119,"line_end":119,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        \"D-1\"           => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:119:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"D-1\"           => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5671,"byte_end":5674,"line_start":120,"line_end":120,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:120:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5771,"byte_end":5774,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:121:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5871,"byte_end":5874,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:122:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5971,"byte_end":5974,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:123:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6071,"byte_end":6074,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:124:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6171,"byte_end":6175,"line_start":125,"line_end":125,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:125:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6271,"byte_end":6272,"line_start":126,"line_end":126,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        _ => {}","highlight_start":25,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:126:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        _ => {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"value assigned to `n` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":2544,"byte_end":2545,"line_start":69,"line_end":69,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"                    n += 1;","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `n` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:69:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    n += 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `li`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3734,"byte_end":3736,"line_start":97,"line_end":97,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let li = \"!\".to_string() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3734,"byte_end":3736,"line_start":97,"line_end":97,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let li = \"!\".to_string() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_li","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `li`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:97:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let li = \"!\".to_string() + c_letter;     // !M/!A\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_li`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `lm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3805,"byte_end":3807,"line_start":98,"line_end":98,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let lm = \"-\".to_string() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3805,"byte_end":3807,"line_start":98,"line_end":98,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let lm = \"-\".to_string() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_lm","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:98:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lm = \"-\".to_string() + c_letter;     // !M/!A\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm`\u001b[0m\n\n"}
{"message":"unused variable: `lp1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3876,"byte_end":3879,"line_start":99,"line_end":99,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lp1 = c_letter.to_string() + \"+1\" ;  // M+1/A+1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3876,"byte_end":3879,"line_start":99,"line_end":99,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lp1 = c_letter.to_string() + \"+1\" ;  // M+1/A+1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lp1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lp1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:99:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lp1 = c_letter.to_string() + \"+1\" ;  // M+1/A+1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lp1`\u001b[0m\n\n"}
{"message":"unused variable: `lm1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3949,"byte_end":3952,"line_start":100,"line_end":100,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lm1 = c_letter.to_string() + \"-1\" ;  // M-1/A-1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3949,"byte_end":3952,"line_start":100,"line_end":100,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lm1 = c_letter.to_string() + \"-1\" ;  // M-1/A-1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lm1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:100:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lm1 = c_letter.to_string() + \"-1\" ;  // M-1/A-1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm1`\u001b[0m\n\n"}
{"message":"unused variable: `dpl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4022,"byte_end":4025,"line_start":101,"line_end":101,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dpl = \"D+\".to_string() + c_letter;   // D+M/D+A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4022,"byte_end":4025,"line_start":101,"line_end":101,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dpl = \"D+\".to_string() + c_letter;   // D+M/D+A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dpl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dpl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:101:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dpl = \"D+\".to_string() + c_letter;   // D+M/D+A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dpl`\u001b[0m\n\n"}
{"message":"unused variable: `dml`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4095,"byte_end":4098,"line_start":102,"line_end":102,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dml = \"D-\".to_string() + c_letter;   // D-M/D-A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4095,"byte_end":4098,"line_start":102,"line_end":102,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dml = \"D-\".to_string() + c_letter;   // D-M/D-A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dml","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:102:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dml = \"D-\".to_string() + c_letter;   // D-M/D-A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dml`\u001b[0m\n\n"}
{"message":"unused variable: `lmd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4168,"byte_end":4171,"line_start":103,"line_end":103,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lmd = c_letter.to_string() + \"-D\";   // M-D/A-D","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4168,"byte_end":4171,"line_start":103,"line_end":103,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lmd = c_letter.to_string() + \"-D\";   // M-D/A-D","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lmd","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lmd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:103:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lmd = c_letter.to_string() + \"-D\";   // M-D/A-D\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lmd`\u001b[0m\n\n"}
{"message":"unused variable: `dal`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4241,"byte_end":4244,"line_start":104,"line_end":104,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dal = \"D&\".to_string() + c_letter;   // D&M/D&A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4241,"byte_end":4244,"line_start":104,"line_end":104,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dal = \"D&\".to_string() + c_letter;   // D&M/D&A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dal","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dal`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:104:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dal = \"D&\".to_string() + c_letter;   // D&M/D&A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dal`\u001b[0m\n\n"}
{"message":"unused variable: `dorl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4314,"byte_end":4318,"line_start":105,"line_end":105,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let dorl = \"D|\".to_string() + c_letter;  // D|M/D|A","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4314,"byte_end":4318,"line_start":105,"line_end":105,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let dorl = \"D|\".to_string() + c_letter;  // D|M/D|A","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_dorl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dorl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:105:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dorl = \"D|\".to_string() + c_letter;  // D|M/D|A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dorl`\u001b[0m\n\n"}
{"message":"unused variable: `c_letter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4847,"byte_end":4855,"line_start":112,"line_end":112,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":"_c_letter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `c_letter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:112:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_c_letter`\u001b[0m\n\n"}
{"message":"unused variable: `li`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5053,"byte_end":5055,"line_start":114,"line_end":114,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5053,"byte_end":5055,"line_start":114,"line_end":114,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_li","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `li`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_li`\u001b[0m\n\n"}
{"message":"unused variable: `lm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5259,"byte_end":5261,"line_start":116,"line_end":116,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5259,"byte_end":5261,"line_start":116,"line_end":116,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_lm","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:116:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm`\u001b[0m\n\n"}
{"message":"unused variable: `lp1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5465,"byte_end":5468,"line_start":118,"line_end":118,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5465,"byte_end":5468,"line_start":118,"line_end":118,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lp1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lp1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lp1`\u001b[0m\n\n"}
{"message":"unused variable: `lm1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5671,"byte_end":5674,"line_start":120,"line_end":120,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5671,"byte_end":5674,"line_start":120,"line_end":120,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lm1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:120:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm1`\u001b[0m\n\n"}
{"message":"unused variable: `dpl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5771,"byte_end":5774,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5771,"byte_end":5774,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dpl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dpl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:121:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dpl`\u001b[0m\n\n"}
{"message":"unused variable: `dml`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5871,"byte_end":5874,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5871,"byte_end":5874,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dml","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:122:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dml`\u001b[0m\n\n"}
{"message":"unused variable: `lmd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5971,"byte_end":5974,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5971,"byte_end":5974,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lmd","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lmd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:123:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lmd`\u001b[0m\n\n"}
{"message":"unused variable: `dal`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6071,"byte_end":6074,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6071,"byte_end":6074,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dal","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dal`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:124:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dal`\u001b[0m\n\n"}
{"message":"unused variable: `dorl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6171,"byte_end":6175,"line_start":125,"line_end":125,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6171,"byte_end":6175,"line_start":125,"line_end":125,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_dorl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dorl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:125:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dorl`\u001b[0m\n\n"}
{"message":"borrowed data escapes outside of method","code":{"code":"E0521","explanation":"Borrowed data escapes outside of closure.\n\nErroneous code example:\n\n```compile_fail,E0521\nlet mut list: Vec<&str> = Vec::new();\n\nlet _add = |el: &str| {\n    list.push(el); // error: `el` escapes the closure body here\n};\n```\n\nA type annotation of a closure parameter implies a new lifetime declaration.\nConsider to drop it, the compiler is reliably able to infer them.\n\n```\nlet mut list: Vec<&str> = Vec::new();\n\nlet _add = |el| {\n    list.push(el);\n};\n```\n\nSee the [Closure type inference and annotation][closure-infere-annotation] and\n[Lifetime elision][lifetime-elision] sections of the Book for more details.\n\n[closure-infere-annotation]: https://doc.rust-lang.org/book/ch13-01-closures.html#closure-type-inference-and-annotation\n[lifetime-elision]: https://doc.rust-lang.org/reference/lifetime-elision.html\n"},"level":"error","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":1771,"byte_end":1778,"line_start":55,"line_end":55,"column_start":46,"column_end":53,"is_primary":false,"text":[{"text":"    fn translate_all_instructions(&mut self, content: &String) -> Vec<u16> {","highlight_start":46,"highlight_end":53}],"label":"`content` is a reference that is only valid in the method body","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":2351,"byte_end":2381,"line_start":66,"line_end":66,"column_start":21,"column_end":51,"is_primary":true,"text":[{"text":"                    self.symbol_table.insert(c, n);","highlight_start":21,"highlight_end":51}],"label":"`content` escapes the method body here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":1780,"byte_end":1781,"line_start":55,"line_end":55,"column_start":55,"column_end":56,"is_primary":false,"text":[{"text":"    fn translate_all_instructions(&mut self, content: &String) -> Vec<u16> {","highlight_start":55,"highlight_end":56}],"label":"let's call the lifetime of this reference `'1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":2351,"byte_end":2381,"line_start":66,"line_end":66,"column_start":21,"column_end":51,"is_primary":true,"text":[{"text":"                    self.symbol_table.insert(c, n);","highlight_start":21,"highlight_end":51}],"label":"argument requires that `'1` must outlive `'static`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0521]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrowed data escapes outside of method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:66:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn translate_all_instructions(&mut self, content: &String) -> Vec<u16> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mlet's call the lifetime of this reference `'1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`content` is a reference that is only valid in the method body\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    self.symbol_table.insert(c, n);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`content` escapes the method body here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9margument requires that `'1` must outlive `'static`\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors; 34 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 3 previous errors; 34 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0521, E0716.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0521, E0716.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0521`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0521`.\u001b[0m\n"}
