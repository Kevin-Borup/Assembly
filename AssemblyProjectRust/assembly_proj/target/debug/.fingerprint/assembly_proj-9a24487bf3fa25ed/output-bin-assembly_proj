{"message":"unused import: `fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":15,"byte_end":23,"line_start":1,"line_end":1,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"use std::{env, fs::File};","highlight_start":16,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":13,"byte_end":23,"line_start":1,"line_end":1,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"use std::{env, fs::File};","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `fs::File`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:1:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{env, fs::File};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `FileExt`, `OpenOptionsExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\file_handler.rs","byte_start":95,"byte_end":109,"line_start":4,"line_end":4,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"use std::os::windows::prelude::{OpenOptionsExt, FileExt};","highlight_start":33,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\file_handler.rs","byte_start":111,"byte_end":118,"line_start":4,"line_end":4,"column_start":49,"column_end":56,"is_primary":true,"text":[{"text":"use std::os::windows::prelude::{OpenOptionsExt, FileExt};","highlight_start":49,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\file_handler.rs","byte_start":63,"byte_end":120,"line_start":4,"line_end":4,"column_start":1,"column_end":58,"is_primary":true,"text":[{"text":"use std::os::windows::prelude::{OpenOptionsExt, FileExt};","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `FileExt`, `OpenOptionsExt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\file_handler.rs:4:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::windows::prelude::{OpenOptionsExt, FileExt};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `str::Bytes`, `vec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":32,"byte_end":42,"line_start":1,"line_end":1,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"use std::{collections::HashMap, str::Bytes, vec};","highlight_start":33,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":44,"byte_end":47,"line_start":1,"line_end":1,"column_start":45,"column_end":48,"is_primary":true,"text":[{"text":"use std::{collections::HashMap, str::Bytes, vec};","highlight_start":45,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":30,"byte_end":47,"line_start":1,"line_end":1,"column_start":31,"column_end":48,"is_primary":true,"text":[{"text":"use std::{collections::HashMap, str::Bytes, vec};","highlight_start":31,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `str::Bytes`, `vec`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:1:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{collections::HashMap, str::Bytes, vec};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"message":"unused variable: `hack_content`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":991,"byte_end":1003,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let hack_content = String::new();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":991,"byte_end":1003,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let hack_content = String::new();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_hack_content","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `hack_content`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let hack_content = String::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_hack_content`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"cannot borrow `*self` as mutable, as it is behind a `&` reference","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":1098,"byte_end":1139,"line_start":31,"line_end":31,"column_start":9,"column_end":50,"is_primary":true,"text":[{"text":"        self.get_all_c_instructions(&asm_content);","highlight_start":9,"highlight_end":50}],"label":"`self` is a `&` reference, so the data it refers to cannot be borrowed as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be a mutable reference","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":940,"byte_end":945,"line_start":27,"line_end":27,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn parse_to_binary(&self, content: String) -> Vec<u16> {","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":"&mut self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `*self` as mutable, as it is behind a `&` reference\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.get_all_c_instructions(&asm_content);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`self` is a `&` reference, so the data it refers to cannot be borrowed as mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be a mutable reference\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub fn parse_to_binary(\u001b[0m\u001b[0m\u001b[38;5;10m&mut self\u001b[0m\u001b[0m, content: String) -> Vec<u16> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\n"}
{"message":"cannot borrow `*self` as mutable, as it is behind a `&` reference","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":1150,"byte_end":1195,"line_start":32,"line_end":32,"column_start":9,"column_end":54,"is_primary":true,"text":[{"text":"        self.translate_all_instructions(&asm_content)","highlight_start":9,"highlight_end":54}],"label":"`self` is a `&` reference, so the data it refers to cannot be borrowed as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be a mutable reference","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":940,"byte_end":945,"line_start":27,"line_end":27,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn parse_to_binary(&self, content: String) -> Vec<u16> {","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":"&mut self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `*self` as mutable, as it is behind a `&` reference\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:32:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.translate_all_instructions(&asm_content)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`self` is a `&` reference, so the data it refers to cannot be borrowed as mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be a mutable reference\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub fn parse_to_binary(\u001b[0m\u001b[0m\u001b[38;5;10m&mut self\u001b[0m\u001b[0m, content: String) -> Vec<u16> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5140,"byte_end":5144,"line_start":114,"line_end":114,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:114:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5246,"byte_end":5248,"line_start":115,"line_end":115,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:115:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"!D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5346,"byte_end":5350,"line_start":116,"line_end":116,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        \"-D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:116:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"-D\"            => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5452,"byte_end":5454,"line_start":117,"line_end":117,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:117:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5552,"byte_end":5557,"line_start":118,"line_end":118,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        \"D+1\"           => {c1 = \"0\"; c2 = \"1\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:118:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"D+1\"           => {c1 = \"0\"; c2 = \"1\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5658,"byte_end":5661,"line_start":119,"line_end":119,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:119:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5758,"byte_end":5763,"line_start":120,"line_end":120,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        \"D-1\"           => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:120:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"D-1\"           => {c1 = \"0\"; c2 = \"0\"; c3 = \"1\"; c4 = \"1\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5864,"byte_end":5867,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:121:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5964,"byte_end":5967,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:122:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6064,"byte_end":6067,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:123:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6164,"byte_end":6167,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:124:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6264,"byte_end":6267,"line_start":125,"line_end":125,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:125:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6364,"byte_end":6368,"line_start":126,"line_end":126,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:126:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6464,"byte_end":6465,"line_start":127,"line_end":127,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        _ => {}","highlight_start":25,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":false,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:127:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        _ => {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable pattern\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":2041,"byte_end":2042,"line_start":60,"line_end":60,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"        for (i, c) in content.lines().enumerate() {","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":2041,"byte_end":2042,"line_start":60,"line_end":60,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"        for (i, c) in content.lines().enumerate() {","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `i`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:60:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (i, c) in content.lines().enumerate() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"value assigned to `n` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":2742,"byte_end":2743,"line_start":70,"line_end":70,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"                    n += 1;","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `n` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:70:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    n += 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `li`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3936,"byte_end":3938,"line_start":98,"line_end":98,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let li = \"!\".to_owned() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3936,"byte_end":3938,"line_start":98,"line_end":98,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let li = \"!\".to_owned() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_li","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `li`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:98:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let li = \"!\".to_owned() + c_letter;     // !M/!A\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_li`\u001b[0m\n\n"}
{"message":"unused variable: `lm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4006,"byte_end":4008,"line_start":99,"line_end":99,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let lm = \"-\".to_owned() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4006,"byte_end":4008,"line_start":99,"line_end":99,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                    let lm = \"-\".to_owned() + c_letter;     // !M/!A","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_lm","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:99:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lm = \"-\".to_owned() + c_letter;     // !M/!A\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm`\u001b[0m\n\n"}
{"message":"unused variable: `lp1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4076,"byte_end":4079,"line_start":100,"line_end":100,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lp1 = c_letter.to_owned() + \"+1\" ;  // M+1/A+1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4076,"byte_end":4079,"line_start":100,"line_end":100,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lp1 = c_letter.to_owned() + \"+1\" ;  // M+1/A+1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lp1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lp1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:100:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lp1 = c_letter.to_owned() + \"+1\" ;  // M+1/A+1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lp1`\u001b[0m\n\n"}
{"message":"unused variable: `lm1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4148,"byte_end":4151,"line_start":101,"line_end":101,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lm1 = c_letter.to_owned() + \"-1\" ;  // M-1/A-1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4148,"byte_end":4151,"line_start":101,"line_end":101,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lm1 = c_letter.to_owned() + \"-1\" ;  // M-1/A-1","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lm1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:101:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lm1 = c_letter.to_owned() + \"-1\" ;  // M-1/A-1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm1`\u001b[0m\n\n"}
{"message":"unused variable: `dpl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4220,"byte_end":4223,"line_start":102,"line_end":102,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dpl = \"D+\".to_owned() + c_letter;   // D+M/D+A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4220,"byte_end":4223,"line_start":102,"line_end":102,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dpl = \"D+\".to_owned() + c_letter;   // D+M/D+A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dpl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dpl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:102:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dpl = \"D+\".to_owned() + c_letter;   // D+M/D+A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dpl`\u001b[0m\n\n"}
{"message":"unused variable: `dml`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4292,"byte_end":4295,"line_start":103,"line_end":103,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dml = \"D-\".to_owned() + c_letter;   // D-M/D-A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4292,"byte_end":4295,"line_start":103,"line_end":103,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dml = \"D-\".to_owned() + c_letter;   // D-M/D-A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dml","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:103:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dml = \"D-\".to_owned() + c_letter;   // D-M/D-A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dml`\u001b[0m\n\n"}
{"message":"unused variable: `lmd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4364,"byte_end":4367,"line_start":104,"line_end":104,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lmd = c_letter.to_owned() + \"-D\";   // M-D/A-D","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4364,"byte_end":4367,"line_start":104,"line_end":104,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let lmd = c_letter.to_owned() + \"-D\";   // M-D/A-D","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lmd","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lmd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:104:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let lmd = c_letter.to_owned() + \"-D\";   // M-D/A-D\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lmd`\u001b[0m\n\n"}
{"message":"unused variable: `dal`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4436,"byte_end":4439,"line_start":105,"line_end":105,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dal = \"D&\".to_owned() + c_letter;   // D&M/D&A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4436,"byte_end":4439,"line_start":105,"line_end":105,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                    let dal = \"D&\".to_owned() + c_letter;   // D&M/D&A","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dal","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dal`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:105:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dal = \"D&\".to_owned() + c_letter;   // D&M/D&A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dal`\u001b[0m\n\n"}
{"message":"unused variable: `dorl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4508,"byte_end":4512,"line_start":106,"line_end":106,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let dorl = \"D|\".to_owned() + c_letter;  // D|M/D|A","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":4508,"byte_end":4512,"line_start":106,"line_end":106,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let dorl = \"D|\".to_owned() + c_letter;  // D|M/D|A","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_dorl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dorl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:106:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let dorl = \"D|\".to_owned() + c_letter;  // D|M/D|A\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dorl`\u001b[0m\n\n"}
{"message":"unused variable: `c_letter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5040,"byte_end":5048,"line_start":113,"line_end":113,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":"_c_letter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `c_letter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        c_letter  => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_c_letter`\u001b[0m\n\n"}
{"message":"unused variable: `li`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5246,"byte_end":5248,"line_start":115,"line_end":115,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5246,"byte_end":5248,"line_start":115,"line_end":115,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_li","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `li`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:115:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        li        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_li`\u001b[0m\n\n"}
{"message":"unused variable: `lm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5452,"byte_end":5454,"line_start":117,"line_end":117,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5452,"byte_end":5454,"line_start":117,"line_end":117,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":27}],"label":null,"suggested_replacement":"_lm","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:117:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm        => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm`\u001b[0m\n\n"}
{"message":"unused variable: `lp1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5658,"byte_end":5661,"line_start":119,"line_end":119,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5658,"byte_end":5661,"line_start":119,"line_end":119,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lp1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lp1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:119:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lp1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lp1`\u001b[0m\n\n"}
{"message":"unused variable: `lm1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5864,"byte_end":5867,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5864,"byte_end":5867,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lm1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lm1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:121:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lm1       => {c1 = \"1\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lm1`\u001b[0m\n\n"}
{"message":"unused variable: `dpl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5964,"byte_end":5967,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":5964,"byte_end":5967,"line_start":122,"line_end":122,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dpl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dpl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:122:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dpl       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dpl`\u001b[0m\n\n"}
{"message":"unused variable: `dml`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6064,"byte_end":6067,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6064,"byte_end":6067,"line_start":123,"line_end":123,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dml","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:123:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dml       => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"0\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dml`\u001b[0m\n\n"}
{"message":"unused variable: `lmd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6164,"byte_end":6167,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6164,"byte_end":6167,"line_start":124,"line_end":124,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_lmd","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `lmd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:124:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        lmd       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"1\"; c5 = \"1\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_lmd`\u001b[0m\n\n"}
{"message":"unused variable: `dal`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6264,"byte_end":6267,"line_start":125,"line_end":125,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6264,"byte_end":6267,"line_start":125,"line_end":125,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"_dal","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dal`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:125:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dal       => {c1 = \"0\"; c2 = \"0\"; c3 = \"0\"; c4 = \"0\"; c5 = \"0\"; c6 = \"0\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dal`\u001b[0m\n\n"}
{"message":"unused variable: `dorl`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6364,"byte_end":6368,"line_start":126,"line_end":126,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":6364,"byte_end":6368,"line_start":126,"line_end":126,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_dorl","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dorl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:126:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        dorl      => {c1 = \"0\"; c2 = \"1\"; c3 = \"0\"; c4 = \"1\"; c5 = \"0\"; c6 = \"1\"},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dorl`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3859,"byte_end":3871,"line_start":97,"line_end":97,"column_start":25,"column_end":37,"is_primary":true,"text":[{"text":"                    let mut c_letter: &str = if a.eq(\"0\") {\"A\"} else {\"M\"};","highlight_start":25,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\asm_binary_parser.rs","byte_start":3859,"byte_end":3863,"line_start":97,"line_end":97,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let mut c_letter: &str = if a.eq(\"0\") {\"A\"} else {\"M\"};","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\asm_binary_parser.rs:97:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut c_letter: &str = if a.eq(\"0\") {\"A\"} else {\"M\"};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 40 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors; 40 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0596`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0596`.\u001b[0m\n"}
